total_demand_by_year <- clean_data_processed %>%
filter(Aircraft %in% c('C-172', 'C-150', 'C-152', 'FMX-1000')) %>%
distinct(Session_ID, Training_Type, .keep_all=T) %>%
group_by(Year)  %>%
summarise(total_duration = sum(as.numeric(Duration)))  %>%
ggplot(aes(x=Year, y=total_duration)) +
geom_bar(stat = "identity", color="darkblue", fill="darkblue") +
ylab('Total Duration') +
labs(title='Total Demand of Each Year')
install.packages("ggpubr")
na.omit(climate_data) %>% select(-date) %>% cor()
knitr::opts_chunk$set( echo=FALSE, # hide code from document
warning=FALSE, # hide warnings
message=FALSE) # hide messages
library(tidyverse)
source(file = "preprocess_data.R")
fuel_by_month <- cleaned_fuel_prices %>%
group_by(Month) %>%
summarise(Avg_Price_Per_Gallon = mean(Price)) %>%
ggplot(aes(x=Month, y=Avg_Price_Per_Gallon)) +
geom_bar(stat="identity", fill="darkblue") +
coord_cartesian(ylim=c(1.9, 2.2)) +
ylab("Avg Price Per Gallon") +
labs(title="Fuel Price By Month ('16-'20)")
fuel_by_season <- cleaned_fuel_prices %>%
group_by(Season) %>%
summarise(Avg_Price_Per_Gallon = mean(Price)) %>%
ggplot(aes(x=Season, y=Avg_Price_Per_Gallon)) +
geom_bar(stat="identity", fill="darkblue") +
coord_cartesian(ylim=c(1.9, 2.2)) +
ylab("Avg Price Per Gallon") +
labs(title="Fuel Price By Season ('16-'20)")
ggarrange(fuel_by_month, fuel_by_season)
clean_data_processed %>%
distinct(Year, Month, Day, .keep_all = T) %>%
mutate_if(is.numeric, replace_na, 0) %>%
ggplot(aes(x=Date, y=`Fuel Price Per Gallon`)) +
geom_line(position="dodge", stat="identity", color="darkblue") +
xlab('Time') + ylab('Fuel Price Per Gallon') +
scale_x_date(breaks = 'year') +
labs(title='Fuel Price Per Gallon Time Series')
library(broom)
data_exercises %>%
group_by(Exercises) %>%
summarise(count=n()) %>%
arrange(desc(count)) %>%
slice(1:3) %>%
knitr::kable( caption = "Most Frequest Group of Exercises")
data_exercises_top_1 <- data_exercises %>%
filter(Exercises == '16,17,18,30')
data_exercises_top_1 = select(data_exercises_top_1, -min_windchill)
# add covid to the dataset
top_1_exercise_lm_out = lm(Total_Duration ~
avg_relative_humidity +
avg_dew_point +
avg_pressure_sea +
avg_pressure_station +
avg_visibility +
avg_health_index +
avg_cloud_cover_4 +
avg_temperature +
precipitation + Season - 1,
data = data_exercises_top_1)
summary(top_1_exercise_lm_out)
na.omit(climate_data) %>% select(-date) %>% cor()
# removing windchill, avg_pressure_sea
# possible: avg_dew_point
na.omit(climate_data) %>% select(-date) %>% cor()
na.omit(climate_data) %>% select(-c("date","min_windchill")) %>% cor()
# add covid to the dataset
duration.fit.2 = lm(Total_Duration ~
avg_relative_humidity +
avg_dew_point +
avg_pressure_sea +
avg_pressure_station +
avg_visibility +
avg_health_index +
avg_cloud_cover_4 +
avg_temperature +
precipitation + Season - 1,
data = duration.data)
knitr::opts_chunk$set( echo=FALSE, # hide code from document
warning=FALSE, # hide warnings
message=FALSE) # hide messages
library(tidyverse)
source(file = "preprocess_data.R")
fuel_by_month <- cleaned_fuel_prices %>%
group_by(Month) %>%
summarise(Avg_Price_Per_Gallon = mean(Price)) %>%
ggplot(aes(x=Month, y=Avg_Price_Per_Gallon)) +
geom_bar(stat="identity", fill="darkblue") +
coord_cartesian(ylim=c(1.9, 2.2)) +
ylab("Avg Price Per Gallon") +
labs(title="Fuel Price By Month ('16-'20)")
fuel_by_season <- cleaned_fuel_prices %>%
group_by(Season) %>%
summarise(Avg_Price_Per_Gallon = mean(Price)) %>%
ggplot(aes(x=Season, y=Avg_Price_Per_Gallon)) +
geom_bar(stat="identity", fill="darkblue") +
coord_cartesian(ylim=c(1.9, 2.2)) +
ylab("Avg Price Per Gallon") +
labs(title="Fuel Price By Season ('16-'20)")
ggarrange(fuel_by_month, fuel_by_season)
clean_data_processed %>%
distinct(Year, Month, Day, .keep_all = T) %>%
mutate_if(is.numeric, replace_na, 0) %>%
ggplot(aes(x=Date, y=`Fuel Price Per Gallon`)) +
geom_line(position="dodge", stat="identity", color="darkblue") +
xlab('Time') + ylab('Fuel Price Per Gallon') +
scale_x_date(breaks = 'year') +
labs(title='Fuel Price Per Gallon Time Series')
library(broom)
data_exercises %>%
group_by(Exercises) %>%
summarise(count=n()) %>%
arrange(desc(count)) %>%
slice(1:3) %>%
knitr::kable( caption = "Most Frequest Group of Exercises")
data_exercises_top_1 <- data_exercises %>%
filter(Exercises == '16,17,18,30')
duration.data = select(data_exercises_top_1, -min_windchill)
# add covid to the dataset
duration.fit.1 = lm(Total_Duration ~
avg_relative_humidity +
avg_dew_point +
avg_pressure_sea +
avg_pressure_station +
avg_visibility +
avg_health_index +
avg_cloud_cover_4 +
avg_temperature +
precipitation + Season - 1,
data = duration.data)
summary(duration.fit.1)
na.omit(climate_data) %>% select(-c("date","min_windchill")) %>% cor()
# add covid to the dataset
duration.fit.2 = lm(Total_Duration ~
avg_relative_humidity +
avg_pressure_sea +
avg_visibility +
avg_health_index +
avg_cloud_cover_4 +
avg_temperature +
precipitation + Season - 1,
data = duration.data)
summary(duration.fit.2)
# add covid to the dataset
duration.fit.2 = lm(Total_Duration ~
avg_relative_humidity +
avg_pressure_sea +
avg_visibility +
avg_health_index +
avg_cloud_cover_4 +
avg_temperature +
precipitation + Season - 1,
data = duration.data)
summary(duration.fit.2)
plot(duration.fit.2$residuals, duration.fit.2$fitted.values)
boxcox(duration.fit.2)
library(MASS)
boxcox(duration.fit.2)
# add covid to the dataset
duration.fit.2 = lm(log(Total_Duration) ~
avg_relative_humidity +
avg_pressure_sea +
avg_visibility +
avg_health_index +
avg_cloud_cover_4 +
avg_temperature +
precipitation + Season - 1,
data = duration.data)
summary(duration.fit.2)
na.omit(climate_data) %>% select(-c("date","min_windchill")) %>% cor()
knitr::opts_chunk$set( echo=FALSE, # hide code from document
warning=FALSE, # hide warnings
message=FALSE) # hide messages
library(tidyverse)
source(file = "preprocess_data.R")
na.omit(climate_data) %>% select(-c("date","min_windchill")) %>% cor()
knitr::opts_chunk$set( echo=FALSE, # hide code from document
warning=FALSE, # hide warnings
message=FALSE) # hide messages
library(tidyverse)
source(file = "preprocess_data.R")
na.omit(climate_data) %>% select(-c("date","min_windchill")) %>% cor()
na.omit(climate_data) %>% select(-c("date","min_windchill")) %>% cor()
library(MASS)
boxcox(duration.fit.2)
clean_data_processed = clean_data_processed
source(file = "preprocess_data.R")
source(file = "preprocess_data.R")
clean_data_processed %>%
distinct(Session_ID, .keep_all = T) %>%
mutate(`Cost Per Hour Per Session`=(Duration*`Fuel Price Per Gallon`*6 + 15*Duration) / Duration) %>%
group_by(Date) %>%
mutate(`Average Cost Per Hour`= mean(`Cost Per Hour Per Session`)) %>%
arrange(Date) -> daily_average_cost_per_hour
